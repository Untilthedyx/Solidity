{
	"id": "06651c01961ac83242c681efbdf1e75f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Task_3/contracts/CrossChainHandler.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport  {IRouterClient} from\"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\";\r\n\r\n\r\nlibrary CrossChainHandler {\r\n\r\n    struct CrossChainBid{\r\n        uint64 sourceChainId;\r\n        address bidder;\r\n        uint256 amount;\r\n        uint256 auctionId;\r\n        address tokenAddress;\r\n        bool executed;\r\n    }\r\n\r\n    struct CCIPStorage{\r\n        mapping (bytes32 => CrossChainBid)  crossChainBids;\r\n        mapping (uint64 => bool)  allowedSourceChains;\r\n        IRouterClient  ccipRouter;\r\n    }\r\n\r\n    event CrossChainBidReceived(bytes32 indexed messageId, uint64 sourceChainId, address bidder, uint256 amount);\r\n    event CrossChainBidExecuted(bytes32 indexed messageId,uint256 auctionId);\r\n\r\n     function initializeCCIP(CCIPStorage storage self, address _ccipRouter) internal{\r\n        self.ccipRouter = IRouterClient(_ccipRouter);\r\n\r\n        self.allowedSourceChains[1]=true;//Ethereum\r\n        self.allowedSourceChains[43114]=true;//Avalanche\r\n        self.allowedSourceChains[137]=true; //Polygon\r\n        self.allowedSourceChains[56]=true;//BSC\r\n    }\r\n\r\n     function sendCrossChainBid(CCIPStorage storage self, uint64 _destinationChainId, uint256 _auctionId, uint256 _amount,address _tokenAddress) internal returns (bytes32){\r\n        require(address(self.ccipRouter)!=address(0),\"CCIP not configured\");\r\n\r\n        if(_tokenAddress!=address(0)){\r\n            IERC20(_tokenAddress).transferFrom(msg.sender,address(this),_amount);\r\n        }else{\r\n            require(msg.value>=_amount,\"Insufficient ETH for bid\");\r\n        }\r\n        \r\n        Client.EVM2AnyMessage memory message = Client.EVM2AnyMessage(\r\n            {\r\n                receiver: abi.encode(address(this)),\r\n                data:abi.encode( msg.sender,_auctionId,_amount,_tokenAddress),\r\n                tokenAmounts: new Client.EVMTokenAmount[](0),\r\n                feeToken: address(0),\r\n                extraArgs: Client._argsToBytes(Client.EVMExtraArgsV1(\r\n                    {\r\n                        gasLimit: 200000\r\n                    }\r\n                ))\r\n            }\r\n        );\r\n\r\n        uint256 ccipFee = self.ccipRouter.getFee(_destinationChainId,message);\r\n\r\n        if(_tokenAddress==address(0)){\r\n            require(msg.value>=ccipFee+_amount,\"Insufficient ETH for bid and CCIP fee\");\r\n        }else{\r\n            require(msg.value>=ccipFee,\"Insufficient ETH for CCIP fee\");\r\n        }\r\n        //发送CCIP消息\r\n        bytes32 messageId = self.ccipRouter.ccipSend{value:msg.value}(_destinationChainId,message);\r\n        //记录跨链出价信息\r\n        self.crossChainBids[messageId] = CrossChainBid({\r\n            sourceChainId: 0,\r\n            bidder:msg.sender,\r\n            amount:_amount,\r\n            auctionId:_auctionId,\r\n            tokenAddress:_tokenAddress,\r\n            executed:false\r\n        });\r\n\r\n        return messageId;\r\n    }\r\n\r\n    function receiveCrossChainMessage(CCIPStorage storage self,Client.Any2EVMMessage memory message) internal returns (bytes32) {\r\n        require(self.allowedSourceChains[message.sourceChainSelector],\"Invalid source chain\");\r\n\r\n        (address bidder, uint256 auctionId, uint256 amount, address tokenAddress )= abi.decode(message.data,(address,uint256,uint256,address));\r\n\r\n        //记录跨链出价信息\r\n        self.crossChainBids[message.messageId] = CrossChainBid({\r\n            sourceChainId: message.sourceChainSelector,\r\n            bidder:bidder,\r\n            amount:amount,\r\n            auctionId:auctionId,\r\n            tokenAddress:tokenAddress,\r\n            executed:false\r\n        });\r\n\r\n        emit CrossChainBidReceived(message.messageId, message.sourceChainSelector, bidder, amount);\r\n        return message.messageId;\r\n    }\r\n\r\n    function markBidExecuted(CCIPStorage storage self, bytes32 messageId) internal {\r\n        require(!self.crossChainBids[messageId].executed,\"Bid already executed\");\r\n        self.crossChainBids[messageId].executed = true;\r\n        emit CrossChainBidExecuted(messageId,self.crossChainBids[messageId].auctionId);\r\n    }\r\n\r\n    function getCrossChainBid(CCIPStorage storage self, bytes32 messageId) internal view returns(CrossChainBid memory){\r\n        return self.crossChainBids[messageId];\r\n    }\r\n\r\n     function setAllowedSourceChain(CCIPStorage storage self,uint64 chainId, bool allowed) internal{\r\n        self.allowedSourceChains[chainId] = allowed;\r\n    }\r\n\r\n    function setCCIPRouter(CCIPStorage storage self,address _ccipRouter) internal {\r\n        self.ccipRouter = IRouterClient(_ccipRouter);\r\n    }\r\n\r\n    function isSourceChainAllowde(CCIPStorage storage self,uint64 chainId)internal view returns(bool ) {\r\n        return self.allowedSourceChains[chainId];\r\n    }\r\n\r\n}"
			},
			"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// End consumer library.\nlibrary Client {\n  /// @dev RMN depends on this struct, if changing, please notify the RMN maintainers.\n  struct EVMTokenAmount {\n    address token; // token address on the local chain.\n    uint256 amount; // Amount of tokens.\n  }\n\n  struct Any2EVMMessage {\n    bytes32 messageId; // MessageId corresponding to ccipSend on source.\n    uint64 sourceChainSelector; // Source chain selector.\n    bytes sender; // abi.decode(sender) if coming from an EVM chain.\n    bytes data; // payload sent in original message.\n    EVMTokenAmount[] destTokenAmounts; // Tokens and their amounts in their destination chain representation.\n  }\n\n  // If extraArgs is empty bytes, the default is 200k gas limit.\n  struct EVM2AnyMessage {\n    bytes receiver; // abi.encode(receiver address) for dest EVM chains\n    bytes data; // Data payload\n    EVMTokenAmount[] tokenAmounts; // Token transfers\n    address feeToken; // Address of feeToken. address(0) means you will send msg.value.\n    bytes extraArgs; // Populate this with _argsToBytes(EVMExtraArgsV2)\n  }\n\n  // bytes4(keccak256(\"CCIP EVMExtraArgsV1\"));\n  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9;\n\n  struct EVMExtraArgsV1 {\n    uint256 gasLimit;\n  }\n\n  function _argsToBytes(\n    EVMExtraArgsV1 memory extraArgs\n  ) internal pure returns (bytes memory bts) {\n    return abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs);\n  }\n\n  // bytes4(keccak256(\"CCIP EVMExtraArgsV2\"));\n  bytes4 public constant EVM_EXTRA_ARGS_V2_TAG = 0x181dcf10;\n\n  /// @param gasLimit: gas limit for the callback on the destination chain.\n  /// @param allowOutOfOrderExecution: if true, it indicates that the message can be executed in any order relative to other messages from the same sender.\n  /// This value's default varies by chain. On some chains, a particular value is enforced, meaning if the expected value\n  /// is not set, the message request will revert.\n  struct EVMExtraArgsV2 {\n    uint256 gasLimit;\n    bool allowOutOfOrderExecution;\n  }\n\n  function _argsToBytes(\n    EVMExtraArgsV2 memory extraArgs\n  ) internal pure returns (bytes memory bts) {\n    return abi.encodeWithSelector(EVM_EXTRA_ARGS_V2_TAG, extraArgs);\n  }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {Client} from \"../libraries/Client.sol\";\n\ninterface IRouterClient {\n  error UnsupportedDestinationChain(uint64 destChainSelector);\n  error InsufficientFeeTokenAmount();\n  error InvalidMsgValue();\n\n  /// @notice Checks if the given chain ID is supported for sending/receiving.\n  /// @param destChainSelector The chain to check.\n  /// @return supported is true if it is supported, false if not.\n  function isChainSupported(\n    uint64 destChainSelector\n  ) external view returns (bool supported);\n\n  /// @param destinationChainSelector The destination chainSelector\n  /// @param message The cross-chain CCIP message including data and/or tokens\n  /// @return fee returns execution fee for the message\n  /// delivery to destination chain, denominated in the feeToken specified in the message.\n  /// @dev Reverts with appropriate reason upon invalid message.\n  function getFee(\n    uint64 destinationChainSelector,\n    Client.EVM2AnyMessage memory message\n  ) external view returns (uint256 fee);\n\n  /// @notice Request a message to be sent to the destination chain\n  /// @param destinationChainSelector The destination chain ID\n  /// @param message The cross-chain CCIP message including data and/or tokens\n  /// @return messageId The message ID\n  /// @dev Note if msg.value is larger than the required fee (from getFee) we accept\n  /// the overpayment with no refund.\n  /// @dev Reverts with appropriate reason upon invalid message.\n  function ccipSend(\n    uint64 destinationChainSelector,\n    Client.EVM2AnyMessage calldata message\n  ) external payable returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol": {
				"IRouterClient": {
					"abi": [
						{
							"inputs": [],
							"name": "InsufficientFeeTokenAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidMsgValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChainSelector",
									"type": "uint64"
								}
							],
							"name": "UnsupportedDestinationChain",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destinationChainSelector",
									"type": "uint64"
								},
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "receiver",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct Client.EVMTokenAmount[]",
											"name": "tokenAmounts",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "feeToken",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "extraArgs",
											"type": "bytes"
										}
									],
									"internalType": "struct Client.EVM2AnyMessage",
									"name": "message",
									"type": "tuple"
								}
							],
							"name": "ccipSend",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destinationChainSelector",
									"type": "uint64"
								},
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "receiver",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct Client.EVMTokenAmount[]",
											"name": "tokenAmounts",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "feeToken",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "extraArgs",
											"type": "bytes"
										}
									],
									"internalType": "struct Client.EVM2AnyMessage",
									"name": "message",
									"type": "tuple"
								}
							],
							"name": "getFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChainSelector",
									"type": "uint64"
								}
							],
							"name": "isChainSupported",
							"outputs": [
								{
									"internalType": "bool",
									"name": "supported",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))": {
								"details": "Note if msg.value is larger than the required fee (from getFee) we accept the overpayment with no refund.Reverts with appropriate reason upon invalid message.",
								"params": {
									"destinationChainSelector": "The destination chain ID",
									"message": "The cross-chain CCIP message including data and/or tokens"
								},
								"returns": {
									"_0": "messageId The message ID"
								}
							},
							"getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))": {
								"details": "Reverts with appropriate reason upon invalid message.",
								"params": {
									"destinationChainSelector": "The destination chainSelector",
									"message": "The cross-chain CCIP message including data and/or tokens"
								},
								"returns": {
									"fee": "returns execution fee for the message delivery to destination chain, denominated in the feeToken specified in the message."
								}
							},
							"isChainSupported(uint64)": {
								"params": {
									"destChainSelector": "The chain to check."
								},
								"returns": {
									"supported": "is true if it is supported, false if not."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))": "96f4e9f9",
							"getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))": "20487ded",
							"isChainSupported(uint64)": "a48a9058"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientFeeTokenAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMsgValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"}],\"name\":\"UnsupportedDestinationChain\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct Client.EVM2AnyMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipSend\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct Client.EVM2AnyMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"}],\"name\":\"isChainSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"details\":\"Note if msg.value is larger than the required fee (from getFee) we accept the overpayment with no refund.Reverts with appropriate reason upon invalid message.\",\"params\":{\"destinationChainSelector\":\"The destination chain ID\",\"message\":\"The cross-chain CCIP message including data and/or tokens\"},\"returns\":{\"_0\":\"messageId The message ID\"}},\"getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"details\":\"Reverts with appropriate reason upon invalid message.\",\"params\":{\"destinationChainSelector\":\"The destination chainSelector\",\"message\":\"The cross-chain CCIP message including data and/or tokens\"},\"returns\":{\"fee\":\"returns execution fee for the message delivery to destination chain, denominated in the feeToken specified in the message.\"}},\"isChainSupported(uint64)\":{\"params\":{\"destChainSelector\":\"The chain to check.\"},\"returns\":{\"supported\":\"is true if it is supported, false if not.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"notice\":\"Request a message to be sent to the destination chain\"},\"isChainSupported(uint64)\":{\"notice\":\"Checks if the given chain ID is supported for sending/receiving.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol\":\"IRouterClient\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"keccak256\":\"0x1f1402f2a1735a827db4951b6bbb53eeb582ecfe03988e55eeb335858f346e67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af6c4c31359a64218a0c791fe6742123a7aa03f9486a575340d6897001dc348a\",\"dweb:/ipfs/QmNRtVXYy8majEW7WUzUYV57FaGM68RDLnQFdjk7SHUYbu\"]},\"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x052174af3c87abcbf5e7754f3d3aa9d0ff5054ecef0d9d01ef087c28a468bb0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21399eff44df1451cdd811be827f453a37c656f91fb139c33ba6d1aaffabb771\",\"dweb:/ipfs/QmSMZ7pC7HURgUHUmFwEcJq7S5rRbjCEGn6YydbeyieM7E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))": {
								"notice": "Request a message to be sent to the destination chain"
							},
							"isChainSupported(uint64)": {
								"notice": "Checks if the given chain ID is supported for sending/receiving."
							}
						},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol": {
				"Client": {
					"abi": [
						{
							"inputs": [],
							"name": "EVM_EXTRA_ARGS_V1_TAG",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EVM_EXTRA_ARGS_V2_TAG",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\":82:2250  library Client {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\":82:2250  library Client {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ab8c0d0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8113c578\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\":1171:1228  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9 */\n    tag_2:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\":1515:1572  bytes4 public constant EVM_EXTRA_ARGS_V2_TAG = 0x181dcf10 */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\":1171:1228  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9 */\n    tag_5:\n        /* \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\":1218:1228  0x97a657c9 */\n      0x97a657c9\n        /* \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\":1171:1228  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9 */\n      0xe0\n      shl\n      dup2\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\":1515:1572  bytes4 public constant EVM_EXTRA_ARGS_V2_TAG = 0x181dcf10 */\n    tag_9:\n        /* \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\":1562:1572  0x181dcf10 */\n      0x181dcf10\n        /* \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\":1515:1572  bytes4 public constant EVM_EXTRA_ARGS_V2_TAG = 0x181dcf10 */\n      0xe0\n      shl\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:156   */\n    tag_11:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:149   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:150   */\n      and\n        /* \"#utility.yul\":61:150   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":162:285   */\n    tag_12:\n        /* \"#utility.yul\":255:278   */\n      tag_16\n        /* \"#utility.yul\":272:277   */\n      dup2\n        /* \"#utility.yul\":255:278   */\n      tag_11\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":250:253   */\n      dup3\n        /* \"#utility.yul\":243:279   */\n      mstore\n        /* \"#utility.yul\":162:285   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":291:525   */\n    tag_7:\n        /* \"#utility.yul\":390:394   */\n      0x00\n        /* \"#utility.yul\":428:430   */\n      0x20\n        /* \"#utility.yul\":417:426   */\n      dup3\n        /* \"#utility.yul\":413:431   */\n      add\n        /* \"#utility.yul\":405:431   */\n      swap1\n      pop\n        /* \"#utility.yul\":441:518   */\n      tag_18\n        /* \"#utility.yul\":515:516   */\n      0x00\n        /* \"#utility.yul\":504:513   */\n      dup4\n        /* \"#utility.yul\":500:517   */\n      add\n        /* \"#utility.yul\":491:497   */\n      dup5\n        /* \"#utility.yul\":441:518   */\n      tag_12\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":291:525   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220229989f7fa01740308f8322b4fa3f001b982051b03ae886da94fec4ae71ab6a364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "61010f61004d600b8282823980515f1a6073146041577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603c575f3560e01c80633ab8c0d01460405780638113c57814605a575b5f5ffd5b60466074565b6040516051919060c2565b60405180910390f35b6060607f565b604051606b919060c2565b60405180910390f35b6397a657c960e01b81565b63181dcf1060e01b81565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60bc81608a565b82525050565b5f60208201905060d35f83018460b5565b9291505056fea2646970667358221220229989f7fa01740308f8322b4fa3f001b982051b03ae886da94fec4ae71ab6a364736f6c634300081e0033",
							"opcodes": "PUSH2 0x10F PUSH2 0x4D PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x41 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AB8C0D0 EQ PUSH1 0x40 JUMPI DUP1 PUSH4 0x8113C578 EQ PUSH1 0x5A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x46 PUSH1 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x51 SWAP2 SWAP1 PUSH1 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x6B SWAP2 SWAP1 PUSH1 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH4 0x97A657C9 PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH4 0x181DCF10 PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xBC DUP2 PUSH1 0x8A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xD3 PUSH0 DUP4 ADD DUP5 PUSH1 0xB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 SWAP10 DUP10 0xF7 STATICCALL ADD PUSH21 0x308F8322B4FA3F001B982051B03AE886DA94FEC4A SWAPN 0x1A 0xB6 LOG3 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "82:2168:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@EVM_EXTRA_ARGS_V1_TAG_79": {
									"entryPoint": 116,
									"id": 79,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@EVM_EXTRA_ARGS_V2_TAG_100": {
									"entryPoint": 127,
									"id": 100,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack_library": {
									"entryPoint": 181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed": {
									"entryPoint": 194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:528:4",
										"nodeType": "YulBlock",
										"src": "0:528:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:105:4",
													"nodeType": "YulBlock",
													"src": "51:105:4",
													"statements": [
														{
															"nativeSrc": "61:89:4",
															"nodeType": "YulAssignment",
															"src": "61:89:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:66:4",
																		"nodeType": "YulLiteral",
																		"src": "83:66:4",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:4"
																},
																"nativeSrc": "72:78:4",
																"nodeType": "YulFunctionCall",
																"src": "72:78:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "7:149:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:4",
														"nodeType": "YulTypedName",
														"src": "33:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:4",
														"nodeType": "YulTypedName",
														"src": "43:7:4",
														"type": ""
													}
												],
												"src": "7:149:4"
											},
											{
												"body": {
													"nativeSrc": "233:52:4",
													"nodeType": "YulBlock",
													"src": "233:52:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "250:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "250:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "272:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "272:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nativeSrc": "255:16:4",
																			"nodeType": "YulIdentifier",
																			"src": "255:16:4"
																		},
																		"nativeSrc": "255:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "255:23:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "243:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "243:6:4"
																},
																"nativeSrc": "243:36:4",
																"nodeType": "YulFunctionCall",
																"src": "243:36:4"
															},
															"nativeSrc": "243:36:4",
															"nodeType": "YulExpressionStatement",
															"src": "243:36:4"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack_library",
												"nativeSrc": "162:123:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "221:5:4",
														"nodeType": "YulTypedName",
														"src": "221:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "228:3:4",
														"nodeType": "YulTypedName",
														"src": "228:3:4",
														"type": ""
													}
												],
												"src": "162:123:4"
											},
											{
												"body": {
													"nativeSrc": "395:130:4",
													"nodeType": "YulBlock",
													"src": "395:130:4",
													"statements": [
														{
															"nativeSrc": "405:26:4",
															"nodeType": "YulAssignment",
															"src": "405:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "417:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "417:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "428:2:4",
																		"nodeType": "YulLiteral",
																		"src": "428:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "413:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "413:3:4"
																},
																"nativeSrc": "413:18:4",
																"nodeType": "YulFunctionCall",
																"src": "413:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "405:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "405:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "491:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "491:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "504:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "504:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:1:4",
																				"nodeType": "YulLiteral",
																				"src": "515:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "500:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "500:3:4"
																		},
																		"nativeSrc": "500:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "500:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack_library",
																	"nativeSrc": "441:49:4",
																	"nodeType": "YulIdentifier",
																	"src": "441:49:4"
																},
																"nativeSrc": "441:77:4",
																"nodeType": "YulFunctionCall",
																"src": "441:77:4"
															},
															"nativeSrc": "441:77:4",
															"nodeType": "YulExpressionStatement",
															"src": "441:77:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed",
												"nativeSrc": "291:234:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "367:9:4",
														"nodeType": "YulTypedName",
														"src": "367:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "379:6:4",
														"nodeType": "YulTypedName",
														"src": "379:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "390:4:4",
														"nodeType": "YulTypedName",
														"src": "390:4:4",
														"type": ""
													}
												],
												"src": "291:234:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "7300000000000000000000000000000000000000003014608060405260043610603c575f3560e01c80633ab8c0d01460405780638113c57814605a575b5f5ffd5b60466074565b6040516051919060c2565b60405180910390f35b6060607f565b604051606b919060c2565b60405180910390f35b6397a657c960e01b81565b63181dcf1060e01b81565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60bc81608a565b82525050565b5f60208201905060d35f83018460b5565b9291505056fea2646970667358221220229989f7fa01740308f8322b4fa3f001b982051b03ae886da94fec4ae71ab6a364736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AB8C0D0 EQ PUSH1 0x40 JUMPI DUP1 PUSH4 0x8113C578 EQ PUSH1 0x5A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x46 PUSH1 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x51 SWAP2 SWAP1 PUSH1 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x6B SWAP2 SWAP1 PUSH1 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH4 0x97A657C9 PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH4 0x181DCF10 PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xBC DUP2 PUSH1 0x8A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xD3 PUSH0 DUP4 ADD DUP5 PUSH1 0xB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 SWAP10 DUP10 0xF7 STATICCALL ADD PUSH21 0x308F8322B4FA3F001B982051B03AE886DA94FEC4A SWAPN 0x1A 0xB6 LOG3 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "82:2168:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1171:57;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1515;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1171;1218:10;1171:57;;;:::o;1515:::-;1562:10;1515:57;;;:::o;7:149:4:-;43:7;83:66;76:5;72:78;61:89;;7:149;;;:::o;162:123::-;255:23;272:5;255:23;:::i;:::-;250:3;243:36;162:123;;:::o;291:234::-;390:4;428:2;417:9;413:18;405:26;;441:77;515:1;504:9;500:17;491:6;441:77;:::i;:::-;291:234;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "54200",
								"executionCost": "128",
								"totalCost": "54328"
							},
							"external": {
								"EVM_EXTRA_ARGS_V1_TAG()": "299",
								"EVM_EXTRA_ARGS_V2_TAG()": "321"
							},
							"internal": {
								"_argsToBytes(struct Client.EVMExtraArgsV1 memory)": "infinite",
								"_argsToBytes(struct Client.EVMExtraArgsV2 memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 82,
									"end": 2250,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 82,
									"end": 2250,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220229989f7fa01740308f8322b4fa3f001b982051b03ae886da94fec4ae71ab6a364736f6c634300081e0033",
									".code": [
										{
											"begin": 82,
											"end": 2250,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "3AB8C0D0"
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "8113C578"
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 2250,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1171,
											"end": 1228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1171,
											"end": 1228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1515,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1515,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1228,
											"name": "PUSH",
											"source": 1,
											"value": "97A657C9"
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "181DCF10"
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 156,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 7,
											"end": 156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 149,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 72,
											"end": 150,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 61,
											"end": 150,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 61,
											"end": 150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 162,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 162,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 255,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 272,
											"end": 277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 255,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 255,
											"end": 278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 255,
											"end": 278,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 255,
											"end": 278,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 250,
											"end": 253,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 243,
											"end": 279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 162,
											"end": 285,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 162,
											"end": 285,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 162,
											"end": 285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 291,
											"end": 525,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 291,
											"end": 525,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 390,
											"end": 394,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 430,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 413,
											"end": 431,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 405,
											"end": 431,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 405,
											"end": 431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 441,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 515,
											"end": 516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 513,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 500,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 491,
											"end": 497,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 441,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 441,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 441,
											"end": 518,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 441,
											"end": 518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 291,
											"end": 525,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 291,
											"end": 525,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 291,
											"end": 525,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 291,
											"end": 525,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 291,
											"end": 525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
								"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"Task_3/contracts/CrossChainHandler.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"EVM_EXTRA_ARGS_V1_TAG()": "3ab8c0d0",
							"EVM_EXTRA_ARGS_V2_TAG()": "8113c578"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EVM_EXTRA_ARGS_V1_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EVM_EXTRA_ARGS_V2_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\":\"Client\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x052174af3c87abcbf5e7754f3d3aa9d0ff5054ecef0d9d01ef087c28a468bb0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21399eff44df1451cdd811be827f453a37c656f91fb139c33ba6d1aaffabb771\",\"dweb:/ipfs/QmSMZ7pC7HURgUHUmFwEcJq7S5rRbjCEGn6YydbeyieM7E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Task_3/contracts/CrossChainHandler.sol": {
				"CrossChainHandler": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "messageId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "auctionId",
									"type": "uint256"
								}
							],
							"name": "CrossChainBidExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "messageId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "sourceChainId",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "bidder",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CrossChainBidReceived",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Task_3/contracts/CrossChainHandler.sol\":285:4899  library CrossChainHandler {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Task_3/contracts/CrossChainHandler.sol\":285:4899  library CrossChainHandler {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212202d25db06f9b2d9da4f7274959bb4a8ac3f3ad128720ae63a9621f1c55f5f785e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202d25db06f9b2d9da4f7274959bb4a8ac3f3ad128720ae63a9621f1c55f5f785e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0x25 0xDB MOD EXTDELEGATECALL 0xB2 0xD9 0xDA 0x4F PUSH19 0x74959BB4A8AC3F3AD128720AE63A9621F1C55F PUSH0 PUSH25 0x5E64736F6C634300081E003300000000000000000000000000 ",
							"sourceMap": "285:4614:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202d25db06f9b2d9da4f7274959bb4a8ac3f3ad128720ae63a9621f1c55f5f785e64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0x25 0xDB MOD EXTDELEGATECALL 0xB2 0xD9 0xDA 0x4F PUSH19 0x74959BB4A8AC3F3AD128720AE63A9621F1C55F PUSH0 PUSH25 0x5E64736F6C634300081E003300000000000000000000000000 ",
							"sourceMap": "285:4614:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getCrossChainBid(struct CrossChainHandler.CCIPStorage storage pointer,bytes32)": "infinite",
								"initializeCCIP(struct CrossChainHandler.CCIPStorage storage pointer,address)": "infinite",
								"isSourceChainAllowde(struct CrossChainHandler.CCIPStorage storage pointer,uint64)": "infinite",
								"markBidExecuted(struct CrossChainHandler.CCIPStorage storage pointer,bytes32)": "infinite",
								"receiveCrossChainMessage(struct CrossChainHandler.CCIPStorage storage pointer,struct Client.Any2EVMMessage memory)": "infinite",
								"sendCrossChainBid(struct CrossChainHandler.CCIPStorage storage pointer,uint64,uint256,uint256,address)": "infinite",
								"setAllowedSourceChain(struct CrossChainHandler.CCIPStorage storage pointer,uint64,bool)": "infinite",
								"setCCIPRouter(struct CrossChainHandler.CCIPStorage storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 285,
									"end": 4899,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 285,
									"end": 4899,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202d25db06f9b2d9da4f7274959bb4a8ac3f3ad128720ae63a9621f1c55f5f785e64736f6c634300081e0033",
									".code": [
										{
											"begin": 285,
											"end": 4899,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 285,
											"end": 4899,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 285,
											"end": 4899,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 285,
											"end": 4899,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 285,
											"end": 4899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 4899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 285,
											"end": 4899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 4899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 4899,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
								"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"Task_3/contracts/CrossChainHandler.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"CrossChainBidExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"sourceChainId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CrossChainBidReceived\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Task_3/contracts/CrossChainHandler.sol\":\"CrossChainHandler\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"keccak256\":\"0x1f1402f2a1735a827db4951b6bbb53eeb582ecfe03988e55eeb335858f346e67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af6c4c31359a64218a0c791fe6742123a7aa03f9486a575340d6897001dc348a\",\"dweb:/ipfs/QmNRtVXYy8majEW7WUzUYV57FaGM68RDLnQFdjk7SHUYbu\"]},\"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x052174af3c87abcbf5e7754f3d3aa9d0ff5054ecef0d9d01ef087c28a468bb0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21399eff44df1451cdd811be827f453a37c656f91fb139c33ba6d1aaffabb771\",\"dweb:/ipfs/QmSMZ7pC7HURgUHUmFwEcJq7S5rRbjCEGn6YydbeyieM7E\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"Task_3/contracts/CrossChainHandler.sol\":{\"keccak256\":\"0xf26e7afcd4a624dd2f3a168c920bd902ab21d23a0eb4ef93ce6d83e3b3013cc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2538e688058c0b09afb6d4584bd7387714fa4efde0f6548b04507a344806e81\",\"dweb:/ipfs/QmXkRLaNbUPp1ExjQKB1xPLy2dzQpCyhbv37LBzHohJqQE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
					"exportedSymbols": {
						"Client": [
							122
						],
						"IRouterClient": [
							42
						]
					},
					"id": 43,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol",
							"file": "../libraries/Client.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 43,
							"sourceUnit": 123,
							"src": "57:47:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Client",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 122,
										"src": "65:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRouterClient",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 42,
							"linearizedBaseContracts": [
								42
							],
							"name": "IRouterClient",
							"nameLocation": "116:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "ae236d9c",
									"id": 7,
									"name": "UnsupportedDestinationChain",
									"nameLocation": "140:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "destChainSelector",
												"nameLocation": "175:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "168:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "168:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:26:0"
									},
									"src": "134:60:0"
								},
								{
									"errorSelector": "07da6ee6",
									"id": 9,
									"name": "InsufficientFeeTokenAmount",
									"nameLocation": "203:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "229:2:0"
									},
									"src": "197:35:0"
								},
								{
									"errorSelector": "1841b4e1",
									"id": 11,
									"name": "InvalidMsgValue",
									"nameLocation": "241:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "256:2:0"
									},
									"src": "235:24:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "263:193:0",
										"text": "@notice Checks if the given chain ID is supported for sending/receiving.\n @param destChainSelector The chain to check.\n @return supported is true if it is supported, false if not."
									},
									"functionSelector": "a48a9058",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isChainSupported",
									"nameLocation": "468:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "destChainSelector",
												"nameLocation": "497:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "490:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 13,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "490:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:34:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "supported",
												"nameLocation": "547:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "542:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "542:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "541:16:0"
									},
									"scope": 42,
									"src": "459:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "562:356:0",
										"text": "@param destinationChainSelector The destination chainSelector\n @param message The cross-chain CCIP message including data and/or tokens\n @return fee returns execution fee for the message\n delivery to destination chain, denominated in the feeToken specified in the message.\n @dev Reverts with appropriate reason upon invalid message."
									},
									"functionSelector": "20487ded",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFee",
									"nameLocation": "930:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "destinationChainSelector",
												"nameLocation": "949:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "942:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "942:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1008:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "979:36:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EVM2AnyMessage_$76_memory_ptr",
													"typeString": "struct Client.EVM2AnyMessage"
												},
												"typeName": {
													"id": 24,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 23,
														"name": "Client.EVM2AnyMessage",
														"nameLocations": [
															"979:6:0",
															"986:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 76,
														"src": "979:21:0"
													},
													"referencedDeclaration": 76,
													"src": "979:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVM2AnyMessage_$76_storage_ptr",
														"typeString": "struct Client.EVM2AnyMessage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:83:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1051:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1043:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:13:0"
									},
									"scope": 42,
									"src": "921:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1060:434:0",
										"text": "@notice Request a message to be sent to the destination chain\n @param destinationChainSelector The destination chain ID\n @param message The cross-chain CCIP message including data and/or tokens\n @return messageId The message ID\n @dev Note if msg.value is larger than the required fee (from getFee) we accept\n the overpayment with no refund.\n @dev Reverts with appropriate reason upon invalid message."
									},
									"functionSelector": "96f4e9f9",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ccipSend",
									"nameLocation": "1506:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "destinationChainSelector",
												"nameLocation": "1527:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1520:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 32,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1520:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1588:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1557:38:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EVM2AnyMessage_$76_calldata_ptr",
													"typeString": "struct Client.EVM2AnyMessage"
												},
												"typeName": {
													"id": 35,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 34,
														"name": "Client.EVM2AnyMessage",
														"nameLocations": [
															"1557:6:0",
															"1564:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 76,
														"src": "1557:21:0"
													},
													"referencedDeclaration": 76,
													"src": "1557:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVM2AnyMessage_$76_storage_ptr",
														"typeString": "struct Client.EVM2AnyMessage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1514:85:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1626:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 38,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1625:9:0"
									},
									"scope": 42,
									"src": "1497:138:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 43,
							"src": "106:1531:0",
							"usedErrors": [
								7,
								9,
								11
							],
							"usedEvents": []
						}
					],
					"src": "32:1606:0"
				},
				"id": 0
			},
			"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol",
					"exportedSymbols": {
						"Client": [
							122
						]
					},
					"id": 123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 44,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Client",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 122,
							"linearizedBaseContracts": [
								122
							],
							"name": "Client",
							"nameLocation": "90:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Client.EVMTokenAmount",
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "101:84:1",
										"text": "@dev RMN depends on this struct, if changing, please notify the RMN maintainers."
									},
									"id": 50,
									"members": [
										{
											"constant": false,
											"id": 47,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "224:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 50,
											"src": "216:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 46,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "216:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 49,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "280:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 50,
											"src": "272:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 48,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "272:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EVMTokenAmount",
									"nameLocation": "195:14:1",
									"nodeType": "StructDefinition",
									"scope": 122,
									"src": "188:124:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Client.Any2EVMMessage",
									"id": 63,
									"members": [
										{
											"constant": false,
											"id": 52,
											"mutability": "mutable",
											"name": "messageId",
											"nameLocation": "352:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 63,
											"src": "344:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 51,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "344:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 54,
											"mutability": "mutable",
											"name": "sourceChainSelector",
											"nameLocation": "424:19:1",
											"nodeType": "VariableDeclaration",
											"scope": 63,
											"src": "417:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 53,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "417:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 56,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "481:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 63,
											"src": "475:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 55,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "475:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 58,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "550:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 63,
											"src": "544:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 57,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "544:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 62,
											"mutability": "mutable",
											"name": "destTokenAmounts",
											"nameLocation": "614:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 63,
											"src": "597:33:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$50_storage_$dyn_storage_ptr",
												"typeString": "struct Client.EVMTokenAmount[]"
											},
											"typeName": {
												"baseType": {
													"id": 60,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 59,
														"name": "EVMTokenAmount",
														"nameLocations": [
															"597:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 50,
														"src": "597:14:1"
													},
													"referencedDeclaration": 50,
													"src": "597:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVMTokenAmount_$50_storage_ptr",
														"typeString": "struct Client.EVMTokenAmount"
													}
												},
												"id": 61,
												"nodeType": "ArrayTypeName",
												"src": "597:16:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$50_storage_$dyn_storage_ptr",
													"typeString": "struct Client.EVMTokenAmount[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Any2EVMMessage",
									"nameLocation": "323:14:1",
									"nodeType": "StructDefinition",
									"scope": 122,
									"src": "316:390:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Client.EVM2AnyMessage",
									"id": 76,
									"members": [
										{
											"constant": false,
											"id": 65,
											"mutability": "mutable",
											"name": "receiver",
											"nameLocation": "809:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 76,
											"src": "803:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 64,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "803:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 67,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "881:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 76,
											"src": "875:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 66,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "875:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 71,
											"mutability": "mutable",
											"name": "tokenAmounts",
											"nameLocation": "924:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 76,
											"src": "907:29:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$50_storage_$dyn_storage_ptr",
												"typeString": "struct Client.EVMTokenAmount[]"
											},
											"typeName": {
												"baseType": {
													"id": 69,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 68,
														"name": "EVMTokenAmount",
														"nameLocations": [
															"907:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 50,
														"src": "907:14:1"
													},
													"referencedDeclaration": 50,
													"src": "907:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVMTokenAmount_$50_storage_ptr",
														"typeString": "struct Client.EVMTokenAmount"
													}
												},
												"id": 70,
												"nodeType": "ArrayTypeName",
												"src": "907:16:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$50_storage_$dyn_storage_ptr",
													"typeString": "struct Client.EVMTokenAmount[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 73,
											"mutability": "mutable",
											"name": "feeToken",
											"nameLocation": "969:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 76,
											"src": "961:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 72,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "961:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 75,
											"mutability": "mutable",
											"name": "extraArgs",
											"nameLocation": "1055:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 76,
											"src": "1049:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 74,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1049:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EVM2AnyMessage",
									"nameLocation": "782:14:1",
									"nodeType": "StructDefinition",
									"scope": 122,
									"src": "775:345:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3ab8c0d0",
									"id": 79,
									"mutability": "constant",
									"name": "EVM_EXTRA_ARGS_V1_TAG",
									"nameLocation": "1194:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 122,
									"src": "1171:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 77,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1171:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783937613635376339",
										"id": 78,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1218:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2544261065_by_1",
											"typeString": "int_const 2544261065"
										},
										"value": "0x97a657c9"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Client.EVMExtraArgsV1",
									"id": 82,
									"members": [
										{
											"constant": false,
											"id": 81,
											"mutability": "mutable",
											"name": "gasLimit",
											"nameLocation": "1269:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 82,
											"src": "1261:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 80,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1261:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EVMExtraArgsV1",
									"nameLocation": "1240:14:1",
									"nodeType": "StructDefinition",
									"scope": 122,
									"src": "1233:49:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "1390:74:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "EVM_EXTRA_ARGS_V1_TAG",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1426:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 93,
															"name": "extraArgs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1449:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EVMExtraArgsV1_$82_memory_ptr",
																"typeString": "struct Client.EVMExtraArgsV1 memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_struct$_EVMExtraArgsV1_$82_memory_ptr",
																"typeString": "struct Client.EVMExtraArgsV1 memory"
															}
														],
														"expression": {
															"id": 90,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1403:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1407:18:1",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "1403:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 89,
												"id": 95,
												"nodeType": "Return",
												"src": "1396:63:1"
											}
										]
									},
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_argsToBytes",
									"nameLocation": "1295:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "extraArgs",
												"nameLocation": "1335:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1313:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EVMExtraArgsV1_$82_memory_ptr",
													"typeString": "struct Client.EVMExtraArgsV1"
												},
												"typeName": {
													"id": 84,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 83,
														"name": "EVMExtraArgsV1",
														"nameLocations": [
															"1313:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 82,
														"src": "1313:14:1"
													},
													"referencedDeclaration": 82,
													"src": "1313:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVMExtraArgsV1_$82_storage_ptr",
														"typeString": "struct Client.EVMExtraArgsV1"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:41:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "bts",
												"nameLocation": "1385:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1372:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 87,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1372:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:18:1"
									},
									"scope": 122,
									"src": "1286:178:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "8113c578",
									"id": 100,
									"mutability": "constant",
									"name": "EVM_EXTRA_ARGS_V2_TAG",
									"nameLocation": "1538:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 122,
									"src": "1515:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 98,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1515:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783138316463663130",
										"id": 99,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1562:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_404606736_by_1",
											"typeString": "int_const 404606736"
										},
										"value": "0x181dcf10"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Client.EVMExtraArgsV2",
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "1577:402:1",
										"text": "@param gasLimit: gas limit for the callback on the destination chain.\n @param allowOutOfOrderExecution: if true, it indicates that the message can be executed in any order relative to other messages from the same sender.\n This value's default varies by chain. On some chains, a particular value is enforced, meaning if the expected value\n is not set, the message request will revert."
									},
									"id": 106,
									"members": [
										{
											"constant": false,
											"id": 103,
											"mutability": "mutable",
											"name": "gasLimit",
											"nameLocation": "2018:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "2010:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 102,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2010:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 105,
											"mutability": "mutable",
											"name": "allowOutOfOrderExecution",
											"nameLocation": "2037:24:1",
											"nodeType": "VariableDeclaration",
											"scope": 106,
											"src": "2032:29:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 104,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2032:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EVMExtraArgsV2",
									"nameLocation": "1989:14:1",
									"nodeType": "StructDefinition",
									"scope": 122,
									"src": "1982:84:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "2174:74:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 116,
															"name": "EVM_EXTRA_ARGS_V2_TAG",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "2210:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 117,
															"name": "extraArgs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "2233:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EVMExtraArgsV2_$106_memory_ptr",
																"typeString": "struct Client.EVMExtraArgsV2 memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_struct$_EVMExtraArgsV2_$106_memory_ptr",
																"typeString": "struct Client.EVMExtraArgsV2 memory"
															}
														],
														"expression": {
															"id": 114,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "2187:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2191:18:1",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "2187:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2187:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 113,
												"id": 119,
												"nodeType": "Return",
												"src": "2180:63:1"
											}
										]
									},
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_argsToBytes",
									"nameLocation": "2079:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "extraArgs",
												"nameLocation": "2119:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2097:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EVMExtraArgsV2_$106_memory_ptr",
													"typeString": "struct Client.EVMExtraArgsV2"
												},
												"typeName": {
													"id": 108,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 107,
														"name": "EVMExtraArgsV2",
														"nameLocations": [
															"2097:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 106,
														"src": "2097:14:1"
													},
													"referencedDeclaration": 106,
													"src": "2097:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVMExtraArgsV2_$106_storage_ptr",
														"typeString": "struct Client.EVMExtraArgsV2"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2091:41:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "bts",
												"nameLocation": "2169:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2156:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2156:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2155:18:1"
									},
									"scope": 122,
									"src": "2070:178:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 123,
							"src": "82:2168:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2219:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							200
						]
					},
					"id": 201,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 124,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 125,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 200,
							"linearizedBaseContracts": [
								200
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 134,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 143,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 200,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 200,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 164,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 200,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 200,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 200,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 200,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 201,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								134,
								143
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"Task_3/contracts/CrossChainHandler.sol": {
				"ast": {
					"absolutePath": "Task_3/contracts/CrossChainHandler.sol",
					"exportedSymbols": {
						"Client": [
							122
						],
						"CrossChainHandler": [
							645
						],
						"IERC20": [
							200
						],
						"IRouterClient": [
							42
						]
					},
					"id": 646,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 202,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 203,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 201,
							"src": "60:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
							"file": "@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
							"id": 205,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 43,
							"src": "118:94:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 204,
										"name": "IRouterClient",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 42,
										"src": "127:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol",
							"file": "@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol",
							"id": 206,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 646,
							"sourceUnit": 123,
							"src": "214:65:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CrossChainHandler",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 645,
							"linearizedBaseContracts": [
								645
							],
							"name": "CrossChainHandler",
							"nameLocation": "293:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "CrossChainHandler.CrossChainBid",
									"id": 219,
									"members": [
										{
											"constant": false,
											"id": 208,
											"mutability": "mutable",
											"name": "sourceChainId",
											"nameLocation": "358:13:3",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "351:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 207,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "351:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 210,
											"mutability": "mutable",
											"name": "bidder",
											"nameLocation": "390:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "382:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 209,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "382:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 212,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "415:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "407:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 211,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "407:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 214,
											"mutability": "mutable",
											"name": "auctionId",
											"nameLocation": "440:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "432:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 213,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "432:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 216,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "468:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "460:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 215,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "460:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 218,
											"mutability": "mutable",
											"name": "executed",
											"nameLocation": "496:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 219,
											"src": "491:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 217,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "491:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CrossChainBid",
									"nameLocation": "327:13:3",
									"nodeType": "StructDefinition",
									"scope": 645,
									"src": "320:192:3",
									"visibility": "public"
								},
								{
									"canonicalName": "CrossChainHandler.CCIPStorage",
									"id": 232,
									"members": [
										{
											"constant": false,
											"id": 224,
											"mutability": "mutable",
											"name": "crossChainBids",
											"nameLocation": "585:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 232,
											"src": "549:50:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_CrossChainBid_$219_storage_$",
												"typeString": "mapping(bytes32 => struct CrossChainHandler.CrossChainBid)"
											},
											"typeName": {
												"id": 223,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "558:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "549:34:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_CrossChainBid_$219_storage_$",
													"typeString": "mapping(bytes32 => struct CrossChainHandler.CrossChainBid)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 222,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 221,
														"name": "CrossChainBid",
														"nameLocations": [
															"569:13:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 219,
														"src": "569:13:3"
													},
													"referencedDeclaration": 219,
													"src": "569:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CrossChainBid_$219_storage_ptr",
														"typeString": "struct CrossChainHandler.CrossChainBid"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 228,
											"mutability": "mutable",
											"name": "allowedSourceChains",
											"nameLocation": "636:19:3",
											"nodeType": "VariableDeclaration",
											"scope": 232,
											"src": "610:45:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint64_$_t_bool_$",
												"typeString": "mapping(uint64 => bool)"
											},
											"typeName": {
												"id": 227,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 225,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "619:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "Mapping",
												"src": "610:24:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint64_$_t_bool_$",
													"typeString": "mapping(uint64 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "629:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 231,
											"mutability": "mutable",
											"name": "ccipRouter",
											"nameLocation": "681:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 232,
											"src": "666:25:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IRouterClient_$42",
												"typeString": "contract IRouterClient"
											},
											"typeName": {
												"id": 230,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 229,
													"name": "IRouterClient",
													"nameLocations": [
														"666:13:3"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 42,
													"src": "666:13:3"
												},
												"referencedDeclaration": 42,
												"src": "666:13:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IRouterClient_$42",
													"typeString": "contract IRouterClient"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CCIPStorage",
									"nameLocation": "527:11:3",
									"nodeType": "StructDefinition",
									"scope": 645,
									"src": "520:179:3",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "55a2834b0d140be6a504c40cd99b41dfe578e2a1a0e57e1d34b62183e35196cb",
									"id": 242,
									"name": "CrossChainBidReceived",
									"nameLocation": "713:21:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"mutability": "mutable",
												"name": "messageId",
												"nameLocation": "751:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "735:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 233,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"indexed": false,
												"mutability": "mutable",
												"name": "sourceChainId",
												"nameLocation": "769:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "762:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 235,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "762:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"indexed": false,
												"mutability": "mutable",
												"name": "bidder",
												"nameLocation": "792:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "784:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "808:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "800:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "800:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "734:81:3"
									},
									"src": "707:109:3"
								},
								{
									"anonymous": false,
									"eventSelector": "656160706f8ffe27fdaba0dc89b407422a6e20d7ebc44b45557939303b8acd18",
									"id": 248,
									"name": "CrossChainBidExecuted",
									"nameLocation": "828:21:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"indexed": true,
												"mutability": "mutable",
												"name": "messageId",
												"nameLocation": "866:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "850:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 243,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"indexed": false,
												"mutability": "mutable",
												"name": "auctionId",
												"nameLocation": "884:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "876:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:45:3"
									},
									"src": "822:73:3"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "983:280:3",
										"statements": [
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 256,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "994:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "999:10:3",
														"memberName": "ccipRouter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 231,
														"src": "994:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRouterClient_$42",
															"typeString": "contract IRouterClient"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 260,
																"name": "_ccipRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "1026:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 259,
															"name": "IRouterClient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "1012:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IRouterClient_$42_$",
																"typeString": "type(contract IRouterClient)"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1012:26:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRouterClient_$42",
															"typeString": "contract IRouterClient"
														}
													},
													"src": "994:44:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRouterClient_$42",
														"typeString": "contract IRouterClient"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "994:44:3"
											},
											{
												"expression": {
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 264,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "1051:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																	"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1056:19:3",
															"memberName": "allowedSourceChains",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 228,
															"src": "1051:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_bool_$",
																"typeString": "mapping(uint64 => bool)"
															}
														},
														"id": 268,
														"indexExpression": {
															"hexValue": "31",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1076:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1051:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1079:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1051:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "1051:32:3"
											},
											{
												"expression": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 272,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "1104:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																	"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1109:19:3",
															"memberName": "allowedSourceChains",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 228,
															"src": "1104:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_bool_$",
																"typeString": "mapping(uint64 => bool)"
															}
														},
														"id": 276,
														"indexExpression": {
															"hexValue": "3433313134",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1129:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_43114_by_1",
																"typeString": "int_const 43114"
															},
															"value": "43114"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1104:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1136:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1104:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "1104:36:3"
											},
											{
												"expression": {
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 280,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "1162:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																	"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
																}
															},
															"id": 283,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1167:19:3",
															"memberName": "allowedSourceChains",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 228,
															"src": "1162:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_bool_$",
																"typeString": "mapping(uint64 => bool)"
															}
														},
														"id": 284,
														"indexExpression": {
															"hexValue": "313337",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1187:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_137_by_1",
																"typeString": "int_const 137"
															},
															"value": "137"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1162:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1192:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1162:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1162:34:3"
											},
											{
												"expression": {
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 288,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "1217:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																	"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1222:19:3",
															"memberName": "allowedSourceChains",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 228,
															"src": "1217:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_bool_$",
																"typeString": "mapping(uint64 => bool)"
															}
														},
														"id": 292,
														"indexExpression": {
															"hexValue": "3536",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1242:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_56_by_1",
																"typeString": "int_const 56"
															},
															"value": "56"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1217:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1246:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1217:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "1217:33:3"
											}
										]
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initializeCCIP",
									"nameLocation": "913:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "948:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "928:24:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
													"typeString": "struct CrossChainHandler.CCIPStorage"
												},
												"typeName": {
													"id": 250,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 249,
														"name": "CCIPStorage",
														"nameLocations": [
															"928:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "928:11:3"
													},
													"referencedDeclaration": 232,
													"src": "928:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
														"typeString": "struct CrossChainHandler.CCIPStorage"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "_ccipRouter",
												"nameLocation": "962:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "954:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "954:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "927:47:3"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:0:3"
									},
									"scope": 645,
									"src": "904:359:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "1438:1621:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 316,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 300,
																			"src": "1465:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																				"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
																			}
																		},
																		"id": 317,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1470:10:3",
																		"memberName": "ccipRouter",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 231,
																		"src": "1465:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IRouterClient_$42",
																			"typeString": "contract IRouterClient"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IRouterClient_$42",
																			"typeString": "contract IRouterClient"
																		}
																	],
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1457:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 314,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1457:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1457:24:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1491:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1483:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 319,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1483:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1483:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1457:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43434950206e6f7420636f6e66696775726564",
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1494:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f09c461d0e1559f52ff0cf9405253f51b0397c13b7f002e8e22aeac31e04196",
																"typeString": "literal_string \"CCIP not configured\""
															},
															"value": "CCIP not configured"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f09c461d0e1559f52ff0cf9405253f51b0397c13b7f002e8e22aeac31e04196",
																"typeString": "literal_string \"CCIP not configured\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1449:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1449:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "1449:67:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 327,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "1532:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1555:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1547:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 328,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1547:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1547:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1532:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "1657:81:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 348,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1680:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1684:5:3",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "1680:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 350,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 306,
																			"src": "1691:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1680:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e742045544820666f7220626964",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f115b393573ae6a972d7fa2f40bf2c40de947b59f62d18efb2f37d1c7d4c4bce",
																			"typeString": "literal_string \"Insufficient ETH for bid\""
																		},
																		"value": "Insufficient ETH for bid"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f115b393573ae6a972d7fa2f40bf2c40de947b59f62d18efb2f37d1c7d4c4bce",
																			"typeString": "literal_string \"Insufficient ETH for bid\""
																		}
																	],
																	"id": 347,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1672:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1672:54:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 354,
															"nodeType": "ExpressionStatement",
															"src": "1672:54:3"
														}
													]
												},
												"id": 356,
												"nodeType": "IfStatement",
												"src": "1529:209:3",
												"trueBody": {
													"id": 346,
													"nodeType": "Block",
													"src": "1558:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 337,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1608:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1612:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1608:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 341,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1627:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CrossChainHandler_$645",
																					"typeString": "library CrossChainHandler"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CrossChainHandler_$645",
																					"typeString": "library CrossChainHandler"
																				}
																			],
																			"id": 340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1619:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 339,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1619:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1619:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 343,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "1633:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 334,
																				"name": "_tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 308,
																				"src": "1580:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 333,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 200,
																			"src": "1573:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$200_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1573:21:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$200",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1595:12:3",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "1573:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1573:68:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 345,
															"nodeType": "ExpressionStatement",
															"src": "1573:68:3"
														}
													]
												}
											},
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "message",
														"nameLocation": "1787:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 464,
														"src": "1758:36:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EVM2AnyMessage_$76_memory_ptr",
															"typeString": "struct Client.EVM2AnyMessage"
														},
														"typeName": {
															"id": 360,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 359,
																"name": "Client.EVM2AnyMessage",
																"nameLocations": [
																	"1758:6:3",
																	"1765:14:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 76,
																"src": "1758:21:3"
															},
															"referencedDeclaration": 76,
															"src": "1758:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EVM2AnyMessage_$76_storage_ptr",
																"typeString": "struct Client.EVM2AnyMessage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 368,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1881:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CrossChainHandler_$645",
																				"typeString": "library CrossChainHandler"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CrossChainHandler_$645",
																				"typeString": "library CrossChainHandler"
																			}
																		],
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1873:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 366,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1873:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1873:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 364,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1862:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1866:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "1862:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1862:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 373,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1923:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1927:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1923:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 375,
																	"name": "_auctionId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "1934:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 376,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "1945:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 377,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "1953:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 371,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1911:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1915:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "1911:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1911:56:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2028:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2000:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_EVMTokenAmount_$50_memory_ptr_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (struct Client.EVMTokenAmount memory[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 380,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 379,
																			"name": "Client.EVMTokenAmount",
																			"nameLocations": [
																				"2004:6:3",
																				"2011:14:3"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 50,
																			"src": "2004:21:3"
																		},
																		"referencedDeclaration": 50,
																		"src": "2004:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_EVMTokenAmount_$50_storage_ptr",
																			"typeString": "struct Client.EVMTokenAmount"
																		}
																	},
																	"id": 381,
																	"nodeType": "ArrayTypeName",
																	"src": "2004:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$50_storage_$dyn_storage_ptr",
																		"typeString": "struct Client.EVMTokenAmount[]"
																	}
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2000:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$50_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Client.EVMTokenAmount memory[] memory"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2067:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2059:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 385,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2059:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2059:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "323030303030",
																			"id": 393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2200:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_200000_by_1",
																				"typeString": "int_const 200000"
																			},
																			"value": "200000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_200000_by_1",
																				"typeString": "int_const 200000"
																			}
																		],
																		"expression": {
																			"id": 391,
																			"name": "Client",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 122,
																			"src": "2119:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Client_$122_$",
																				"typeString": "type(library Client)"
																			}
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2126:14:3",
																		"memberName": "EVMExtraArgsV1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 82,
																		"src": "2119:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_EVMExtraArgsV1_$82_storage_ptr_$",
																			"typeString": "type(struct Client.EVMExtraArgsV1 storage pointer)"
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [
																		"2190:8:3"
																	],
																	"names": [
																		"gasLimit"
																	],
																	"nodeType": "FunctionCall",
																	"src": "2119:129:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_EVMExtraArgsV1_$82_memory_ptr",
																		"typeString": "struct Client.EVMExtraArgsV1 memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_EVMExtraArgsV1_$82_memory_ptr",
																		"typeString": "struct Client.EVMExtraArgsV1 memory"
																	}
																],
																"expression": {
																	"id": 389,
																	"name": "Client",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2099:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Client_$122_$",
																		"typeString": "type(library Client)"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2106:12:3",
																"memberName": "_argsToBytes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 97,
																"src": "2099:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_struct$_EVMExtraArgsV1_$82_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (struct Client.EVMExtraArgsV1 memory) pure returns (bytes memory)"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2099:150:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$50_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Client.EVMTokenAmount memory[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 362,
															"name": "Client",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "1797:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Client_$122_$",
																"typeString": "type(library Client)"
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1804:14:3",
														"memberName": "EVM2AnyMessage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "1797:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_EVM2AnyMessage_$76_storage_ptr_$",
															"typeString": "type(struct Client.EVM2AnyMessage storage pointer)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1852:8:3",
														"1906:4:3",
														"1986:12:3",
														"2049:8:3",
														"2088:9:3"
													],
													"names": [
														"receiver",
														"data",
														"tokenAmounts",
														"feeToken",
														"extraArgs"
													],
													"nodeType": "FunctionCall",
													"src": "1797:478:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVM2AnyMessage_$76_memory_ptr",
														"typeString": "struct Client.EVM2AnyMessage memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1758:517:3"
											},
											{
												"assignments": [
													399
												],
												"declarations": [
													{
														"constant": false,
														"id": 399,
														"mutability": "mutable",
														"name": "ccipFee",
														"nameLocation": "2296:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 464,
														"src": "2288:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2288:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"arguments": [
														{
															"id": 403,
															"name": "_destinationChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "2329:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 404,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "2349:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EVM2AnyMessage_$76_memory_ptr",
																"typeString": "struct Client.EVM2AnyMessage memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_struct$_EVM2AnyMessage_$76_memory_ptr",
																"typeString": "struct Client.EVM2AnyMessage memory"
															}
														],
														"expression": {
															"expression": {
																"id": 400,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2306:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																	"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
																}
															},
															"id": 401,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2311:10:3",
															"memberName": "ccipRouter",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 231,
															"src": "2306:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRouterClient_$42",
																"typeString": "contract IRouterClient"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2322:6:3",
														"memberName": "getFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 30,
														"src": "2306:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint64_$_t_struct$_EVM2AnyMessage_$76_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint64,struct Client.EVM2AnyMessage memory) view external returns (uint256)"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2306:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2288:69:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 407,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "2373:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2396:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2388:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 408,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2388:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2388:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2373:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 432,
													"nodeType": "Block",
													"src": "2505:86:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 425,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2528:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2532:5:3",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "2528:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 427,
																			"name": "ccipFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 399,
																			"src": "2539:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2528:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e742045544820666f72204343495020666565",
																		"id": 429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2547:31:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3fec20fae0c2755f61ca30facbc58f08e2de021b9171f005008b1523c72a06df",
																			"typeString": "literal_string \"Insufficient ETH for CCIP fee\""
																		},
																		"value": "Insufficient ETH for CCIP fee"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3fec20fae0c2755f61ca30facbc58f08e2de021b9171f005008b1523c72a06df",
																			"typeString": "literal_string \"Insufficient ETH for CCIP fee\""
																		}
																	],
																	"id": 424,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2520:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2520:59:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 431,
															"nodeType": "ExpressionStatement",
															"src": "2520:59:3"
														}
													]
												},
												"id": 433,
												"nodeType": "IfStatement",
												"src": "2370:221:3",
												"trueBody": {
													"id": 423,
													"nodeType": "Block",
													"src": "2399:102:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 414,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2422:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2426:5:3",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "2422:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 416,
																				"name": "ccipFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 399,
																				"src": "2433:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 417,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 306,
																				"src": "2441:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2433:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2422:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e742045544820666f722062696420616e64204343495020666565",
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2449:39:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d0d5e75f1c45ebcfd538e7ad6fe45f6fe95fb4935a56f48aa26b3b5f293cae6e",
																			"typeString": "literal_string \"Insufficient ETH for bid and CCIP fee\""
																		},
																		"value": "Insufficient ETH for bid and CCIP fee"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d0d5e75f1c45ebcfd538e7ad6fe45f6fe95fb4935a56f48aa26b3b5f293cae6e",
																			"typeString": "literal_string \"Insufficient ETH for bid and CCIP fee\""
																		}
																	],
																	"id": 413,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2414:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2414:75:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 422,
															"nodeType": "ExpressionStatement",
															"src": "2414:75:3"
														}
													]
												}
											},
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "messageId",
														"nameLocation": "2637:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 464,
														"src": "2629:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 434,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2629:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"arguments": [
														{
															"id": 442,
															"name": "_destinationChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "2691:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 443,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "2711:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EVM2AnyMessage_$76_memory_ptr",
																"typeString": "struct Client.EVM2AnyMessage memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_struct$_EVM2AnyMessage_$76_memory_ptr",
																"typeString": "struct Client.EVM2AnyMessage memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_struct$_EVM2AnyMessage_$76_memory_ptr",
																	"typeString": "struct Client.EVM2AnyMessage memory"
																}
															],
															"expression": {
																"expression": {
																	"id": 436,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "2649:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																		"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2654:10:3",
																"memberName": "ccipRouter",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 231,
																"src": "2649:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IRouterClient_$42",
																	"typeString": "contract IRouterClient"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2665:8:3",
															"memberName": "ccipSend",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 41,
															"src": "2649:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint64_$_t_struct$_EVM2AnyMessage_$76_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (uint64,struct Client.EVM2AnyMessage memory) payable external returns (bytes32)"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 439,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2680:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2684:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2680:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2649:41:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint64_$_t_struct$_EVM2AnyMessage_$76_memory_ptr_$returns$_t_bytes32_$value",
															"typeString": "function (uint64,struct Client.EVM2AnyMessage memory) payable external returns (bytes32)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2649:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2629:90:3"
											},
											{
												"expression": {
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 446,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2766:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																	"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2771:14:3",
															"memberName": "crossChainBids",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 224,
															"src": "2766:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_CrossChainBid_$219_storage_$",
																"typeString": "mapping(bytes32 => struct CrossChainHandler.CrossChainBid storage ref)"
															}
														},
														"id": 450,
														"indexExpression": {
															"id": 448,
															"name": "messageId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "2786:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2766:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CrossChainBid_$219_storage",
															"typeString": "struct CrossChainHandler.CrossChainBid storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2843:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"expression": {
																	"id": 453,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2866:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2870:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2866:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 455,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "2898:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 456,
																"name": "_auctionId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "2930:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 457,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "2968:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3005:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 451,
															"name": "CrossChainBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "2799:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_CrossChainBid_$219_storage_ptr_$",
																"typeString": "type(struct CrossChainHandler.CrossChainBid storage pointer)"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2828:13:3",
															"2859:6:3",
															"2891:6:3",
															"2920:9:3",
															"2955:12:3",
															"2996:8:3"
														],
														"names": [
															"sourceChainId",
															"bidder",
															"amount",
															"auctionId",
															"tokenAddress",
															"executed"
														],
														"nodeType": "FunctionCall",
														"src": "2799:223:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CrossChainBid_$219_memory_ptr",
															"typeString": "struct CrossChainHandler.CrossChainBid memory"
														}
													},
													"src": "2766:256:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CrossChainBid_$219_storage",
														"typeString": "struct CrossChainHandler.CrossChainBid storage ref"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "2766:256:3"
											},
											{
												"expression": {
													"id": 462,
													"name": "messageId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "3042:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 312,
												"id": 463,
												"nodeType": "Return",
												"src": "3035:16:3"
											}
										]
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendCrossChainBid",
									"nameLocation": "1281:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1319:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1299:24:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
													"typeString": "struct CrossChainHandler.CCIPStorage"
												},
												"typeName": {
													"id": 299,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 298,
														"name": "CCIPStorage",
														"nameLocations": [
															"1299:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1299:11:3"
													},
													"referencedDeclaration": 232,
													"src": "1299:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
														"typeString": "struct CrossChainHandler.CCIPStorage"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "_destinationChainId",
												"nameLocation": "1332:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1325:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 301,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1325:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "_auctionId",
												"nameLocation": "1361:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1353:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1381:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1373:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "1397:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1389:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1298:113:3"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "1430:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1430:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1429:9:3"
									},
									"scope": 645,
									"src": "1272:1787:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3191:721:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"expression": {
																	"id": 477,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "3210:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																		"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3215:19:3",
																"memberName": "allowedSourceChains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "3210:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint64_$_t_bool_$",
																	"typeString": "mapping(uint64 => bool)"
																}
															},
															"id": 481,
															"indexExpression": {
																"expression": {
																	"id": 479,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "3235:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Any2EVMMessage_$63_memory_ptr",
																		"typeString": "struct Client.Any2EVMMessage memory"
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3243:19:3",
																"memberName": "sourceChainSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "3235:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3210:53:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420736f7572636520636861696e",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3264:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6aae8151f93cf2d80351991a41d9cfb651b815fc33e12b24b83dc738b68fabcf",
																"typeString": "literal_string \"Invalid source chain\""
															},
															"value": "Invalid source chain"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6aae8151f93cf2d80351991a41d9cfb651b815fc33e12b24b83dc738b68fabcf",
																"typeString": "literal_string \"Invalid source chain\""
															}
														],
														"id": 476,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3202:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3202:85:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "3202:85:3"
											},
											{
												"assignments": [
													486,
													488,
													490,
													492
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "bidder",
														"nameLocation": "3309:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3301:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 485,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3301:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 488,
														"mutability": "mutable",
														"name": "auctionId",
														"nameLocation": "3325:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3317:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 487,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3317:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3344:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3336:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 489,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3336:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 492,
														"mutability": "mutable",
														"name": "tokenAddress",
														"nameLocation": "3360:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3352:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 491,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3352:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 495,
																"name": "message",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "3387:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Any2EVMMessage_$63_memory_ptr",
																	"typeString": "struct Client.Any2EVMMessage memory"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3395:4:3",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 58,
															"src": "3387:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3401:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 497,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3401:7:3",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3409:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 499,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3409:7:3",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3417:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 501,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3417:7:3",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3425:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 503,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3425:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 505,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3400:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_address_$_$",
																"typeString": "tuple(type(address),type(uint256),type(uint256),type(address))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_address_$_$",
																"typeString": "tuple(type(address),type(uint256),type(uint256),type(address))"
															}
														],
														"expression": {
															"id": 493,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3376:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3380:6:3",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "3376:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3376:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$_t_uint256_$_t_address_payable_$",
														"typeString": "tuple(address payable,uint256,uint256,address payable)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3300:134:3"
											},
											{
												"expression": {
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 508,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "3483:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																	"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3488:14:3",
															"memberName": "crossChainBids",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 224,
															"src": "3483:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_CrossChainBid_$219_storage_$",
																"typeString": "mapping(bytes32 => struct CrossChainHandler.CrossChainBid storage ref)"
															}
														},
														"id": 513,
														"indexExpression": {
															"expression": {
																"id": 510,
																"name": "message",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "3503:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Any2EVMMessage_$63_memory_ptr",
																	"typeString": "struct Client.Any2EVMMessage memory"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3511:9:3",
															"memberName": "messageId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 52,
															"src": "3503:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3483:38:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CrossChainBid_$219_storage",
															"typeString": "struct CrossChainHandler.CrossChainBid storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 515,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "3568:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Any2EVMMessage_$63_memory_ptr",
																		"typeString": "struct Client.Any2EVMMessage memory"
																	}
																},
																"id": 516,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3576:19:3",
																"memberName": "sourceChainSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "3568:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"id": 517,
																"name": "bidder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "3617:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 518,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "3645:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 519,
																"name": "auctionId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "3676:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 520,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "3713:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3749:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 514,
															"name": "CrossChainBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "3524:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_CrossChainBid_$219_storage_ptr_$",
																"typeString": "type(struct CrossChainHandler.CrossChainBid storage pointer)"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3553:13:3",
															"3610:6:3",
															"3638:6:3",
															"3666:9:3",
															"3700:12:3",
															"3740:8:3"
														],
														"names": [
															"sourceChainId",
															"bidder",
															"amount",
															"auctionId",
															"tokenAddress",
															"executed"
														],
														"nodeType": "FunctionCall",
														"src": "3524:242:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CrossChainBid_$219_memory_ptr",
															"typeString": "struct CrossChainHandler.CrossChainBid memory"
														}
													},
													"src": "3483:283:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CrossChainBid_$219_storage",
														"typeString": "struct CrossChainHandler.CrossChainBid storage ref"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "3483:283:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 526,
																"name": "message",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "3806:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Any2EVMMessage_$63_memory_ptr",
																	"typeString": "struct Client.Any2EVMMessage memory"
																}
															},
															"id": 527,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3814:9:3",
															"memberName": "messageId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 52,
															"src": "3806:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 528,
																"name": "message",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "3825:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Any2EVMMessage_$63_memory_ptr",
																	"typeString": "struct Client.Any2EVMMessage memory"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3833:19:3",
															"memberName": "sourceChainSelector",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 54,
															"src": "3825:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 530,
															"name": "bidder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3854:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "3862:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 525,
														"name": "CrossChainBidReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "3784:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint64_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint64,address,uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3784:85:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "EmitStatement",
												"src": "3779:90:3"
											},
											{
												"expression": {
													"expression": {
														"id": 534,
														"name": "message",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "3887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Any2EVMMessage_$63_memory_ptr",
															"typeString": "struct Client.Any2EVMMessage memory"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3895:9:3",
													"memberName": "messageId",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 52,
													"src": "3887:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 475,
												"id": 536,
												"nodeType": "Return",
												"src": "3880:24:3"
											}
										]
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveCrossChainMessage",
									"nameLocation": "3076:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "3121:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3101:24:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
													"typeString": "struct CrossChainHandler.CCIPStorage"
												},
												"typeName": {
													"id": 467,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 466,
														"name": "CCIPStorage",
														"nameLocations": [
															"3101:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "3101:11:3"
													},
													"referencedDeclaration": 232,
													"src": "3101:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
														"typeString": "struct CrossChainHandler.CCIPStorage"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "3155:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3126:36:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Any2EVMMessage_$63_memory_ptr",
													"typeString": "struct Client.Any2EVMMessage"
												},
												"typeName": {
													"id": 470,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 469,
														"name": "Client.Any2EVMMessage",
														"nameLocations": [
															"3126:6:3",
															"3133:14:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 63,
														"src": "3126:21:3"
													},
													"referencedDeclaration": 63,
													"src": "3126:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Any2EVMMessage_$63_storage_ptr",
														"typeString": "struct Client.Any2EVMMessage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3100:63:3"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3182:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 473,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3182:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3181:9:3"
									},
									"scope": 645,
									"src": "3067:845:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "3999:237:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4018:40:3",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 547,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 541,
																			"src": "4019:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																				"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
																			}
																		},
																		"id": 548,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4024:14:3",
																		"memberName": "crossChainBids",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 224,
																		"src": "4019:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_CrossChainBid_$219_storage_$",
																			"typeString": "mapping(bytes32 => struct CrossChainHandler.CrossChainBid storage ref)"
																		}
																	},
																	"id": 550,
																	"indexExpression": {
																		"id": 549,
																		"name": "messageId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 543,
																		"src": "4039:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4019:30:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CrossChainBid_$219_storage",
																		"typeString": "struct CrossChainHandler.CrossChainBid storage ref"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4050:8:3",
																"memberName": "executed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 218,
																"src": "4019:39:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42696420616c7265616479206578656375746564",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4059:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_989ed4e4ae212047d4a2b345f5fb868c7baa7026f7c53b29610fb9432292a795",
																"typeString": "literal_string \"Bid already executed\""
															},
															"value": "Bid already executed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_989ed4e4ae212047d4a2b345f5fb868c7baa7026f7c53b29610fb9432292a795",
																"typeString": "literal_string \"Bid already executed\""
															}
														],
														"id": 546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4010:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4010:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "4010:72:3"
											},
											{
												"expression": {
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 556,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "4093:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																		"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
																	}
																},
																"id": 559,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4098:14:3",
																"memberName": "crossChainBids",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 224,
																"src": "4093:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_CrossChainBid_$219_storage_$",
																	"typeString": "mapping(bytes32 => struct CrossChainHandler.CrossChainBid storage ref)"
																}
															},
															"id": 560,
															"indexExpression": {
																"id": 558,
																"name": "messageId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "4113:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4093:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CrossChainBid_$219_storage",
																"typeString": "struct CrossChainHandler.CrossChainBid storage ref"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4124:8:3",
														"memberName": "executed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 218,
														"src": "4093:39:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4135:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4093:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "4093:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 566,
															"name": "messageId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "4177:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 567,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "4187:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																			"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
																		}
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4192:14:3",
																	"memberName": "crossChainBids",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 224,
																	"src": "4187:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_CrossChainBid_$219_storage_$",
																		"typeString": "mapping(bytes32 => struct CrossChainHandler.CrossChainBid storage ref)"
																	}
																},
																"id": 570,
																"indexExpression": {
																	"id": 569,
																	"name": "messageId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "4207:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4187:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CrossChainBid_$219_storage",
																	"typeString": "struct CrossChainHandler.CrossChainBid storage ref"
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4218:9:3",
															"memberName": "auctionId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 214,
															"src": "4187:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 565,
														"name": "CrossChainBidExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "4155:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4155:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "EmitStatement",
												"src": "4150:78:3"
											}
										]
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "markBidExecuted",
									"nameLocation": "3929:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "3965:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3945:24:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
													"typeString": "struct CrossChainHandler.CCIPStorage"
												},
												"typeName": {
													"id": 540,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 539,
														"name": "CCIPStorage",
														"nameLocations": [
															"3945:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "3945:11:3"
													},
													"referencedDeclaration": 232,
													"src": "3945:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
														"typeString": "struct CrossChainHandler.CCIPStorage"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "messageId",
												"nameLocation": "3979:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3971:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 542,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:45:3"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3999:0:3"
									},
									"scope": 645,
									"src": "3920:316:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "4358:56:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 586,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "4376:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4381:14:3",
														"memberName": "crossChainBids",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "4376:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_CrossChainBid_$219_storage_$",
															"typeString": "mapping(bytes32 => struct CrossChainHandler.CrossChainBid storage ref)"
														}
													},
													"id": 589,
													"indexExpression": {
														"id": 588,
														"name": "messageId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4396:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4376:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CrossChainBid_$219_storage",
														"typeString": "struct CrossChainHandler.CrossChainBid storage ref"
													}
												},
												"functionReturnParameters": 585,
												"id": 590,
												"nodeType": "Return",
												"src": "4369:37:3"
											}
										]
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCrossChainBid",
									"nameLocation": "4253:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "4290:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "4270:24:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
													"typeString": "struct CrossChainHandler.CCIPStorage"
												},
												"typeName": {
													"id": 577,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 576,
														"name": "CCIPStorage",
														"nameLocations": [
															"4270:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "4270:11:3"
													},
													"referencedDeclaration": 232,
													"src": "4270:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
														"typeString": "struct CrossChainHandler.CCIPStorage"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "messageId",
												"nameLocation": "4304:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "4296:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 579,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4269:45:3"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "4337:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CrossChainBid_$219_memory_ptr",
													"typeString": "struct CrossChainHandler.CrossChainBid"
												},
												"typeName": {
													"id": 583,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 582,
														"name": "CrossChainBid",
														"nameLocations": [
															"4337:13:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 219,
														"src": "4337:13:3"
													},
													"referencedDeclaration": 219,
													"src": "4337:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CrossChainBid_$219_storage_ptr",
														"typeString": "struct CrossChainHandler.CrossChainBid"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:22:3"
									},
									"scope": 645,
									"src": "4244:170:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "4517:62:3",
										"statements": [
											{
												"expression": {
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 602,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "4528:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																	"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4533:19:3",
															"memberName": "allowedSourceChains",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 228,
															"src": "4528:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_bool_$",
																"typeString": "mapping(uint64 => bool)"
															}
														},
														"id": 606,
														"indexExpression": {
															"id": 604,
															"name": "chainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "4553:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4528:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 607,
														"name": "allowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "4564:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4528:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "4528:43:3"
											}
										]
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAllowedSourceChain",
									"nameLocation": "4432:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "4474:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "4454:24:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
													"typeString": "struct CrossChainHandler.CCIPStorage"
												},
												"typeName": {
													"id": 594,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 593,
														"name": "CCIPStorage",
														"nameLocations": [
															"4454:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "4454:11:3"
													},
													"referencedDeclaration": 232,
													"src": "4454:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
														"typeString": "struct CrossChainHandler.CCIPStorage"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "4486:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "4479:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 596,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4479:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "allowed",
												"nameLocation": "4500:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "4495:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4495:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4453:55:3"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4517:0:3"
									},
									"scope": 645,
									"src": "4423:156:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "4665:63:3",
										"statements": [
											{
												"expression": {
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 619,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "4676:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4681:10:3",
														"memberName": "ccipRouter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 231,
														"src": "4676:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRouterClient_$42",
															"typeString": "contract IRouterClient"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 623,
																"name": "_ccipRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "4708:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 622,
															"name": "IRouterClient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "4694:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IRouterClient_$42_$",
																"typeString": "type(contract IRouterClient)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4694:26:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRouterClient_$42",
															"typeString": "contract IRouterClient"
														}
													},
													"src": "4676:44:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRouterClient_$42",
														"typeString": "contract IRouterClient"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "4676:44:3"
											}
										]
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCCIPRouter",
									"nameLocation": "4596:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "4630:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4610:24:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
													"typeString": "struct CrossChainHandler.CCIPStorage"
												},
												"typeName": {
													"id": 613,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 612,
														"name": "CCIPStorage",
														"nameLocations": [
															"4610:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "4610:11:3"
													},
													"referencedDeclaration": 232,
													"src": "4610:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
														"typeString": "struct CrossChainHandler.CCIPStorage"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "_ccipRouter",
												"nameLocation": "4643:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4635:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4609:46:3"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4665:0:3"
									},
									"scope": 645,
									"src": "4587:141:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "4835:59:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 638,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "4853:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
																"typeString": "struct CrossChainHandler.CCIPStorage storage pointer"
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4858:19:3",
														"memberName": "allowedSourceChains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 228,
														"src": "4853:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_bool_$",
															"typeString": "mapping(uint64 => bool)"
														}
													},
													"id": 641,
													"indexExpression": {
														"id": 640,
														"name": "chainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "4878:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4853:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 637,
												"id": 642,
												"nodeType": "Return",
												"src": "4846:40:3"
											}
										]
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isSourceChainAllowde",
									"nameLocation": "4745:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "4786:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4766:24:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
													"typeString": "struct CrossChainHandler.CCIPStorage"
												},
												"typeName": {
													"id": 630,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 629,
														"name": "CCIPStorage",
														"nameLocations": [
															"4766:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "4766:11:3"
													},
													"referencedDeclaration": 232,
													"src": "4766:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CCIPStorage_$232_storage_ptr",
														"typeString": "struct CrossChainHandler.CCIPStorage"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "4798:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4791:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 632,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4791:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:41:3"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4828:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4828:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4827:7:3"
									},
									"scope": 645,
									"src": "4736:158:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 646,
							"src": "285:4614:3",
							"usedErrors": [],
							"usedEvents": [
								242,
								248
							]
						}
					],
					"src": "33:4866:3"
				},
				"id": 3
			}
		}
	}
}